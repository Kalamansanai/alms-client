/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiEndpointsSitesCreateReq,
  ApiEndpointsSitesCreateRes,
  ApiEndpointsSitesGetByIdRes,
  ApiEndpointsSitesListRes,
  ApiEndpointsSitesRenameReq,
} from '../models';

export interface ApiEndpointsSitesCreateRequest {
    apiEndpointsSitesCreateReq: ApiEndpointsSitesCreateReq;
}

export interface ApiEndpointsSitesDeleteRequest {
    id: number;
}

export interface ApiEndpointsSitesGetByIdRequest {
    id: number;
}

export interface ApiEndpointsSitesRenameRequest {
    id: number;
    apiEndpointsSitesRenameReq: ApiEndpointsSitesRenameReq;
}

/**
 * 
 */
export class SitesApi extends runtime.BaseAPI {

    /**
     */
    async apiEndpointsSitesCreateRaw(requestParameters: ApiEndpointsSitesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiEndpointsSitesCreateRes>> {
        if (requestParameters.apiEndpointsSitesCreateReq === null || requestParameters.apiEndpointsSitesCreateReq === undefined) {
            throw new runtime.RequiredError('apiEndpointsSitesCreateReq','Required parameter requestParameters.apiEndpointsSitesCreateReq was null or undefined when calling apiEndpointsSitesCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/sites`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.apiEndpointsSitesCreateReq,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsSitesCreate(requestParameters: ApiEndpointsSitesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiEndpointsSitesCreateRes> {
        const response = await this.apiEndpointsSitesCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsSitesDeleteRaw(requestParameters: ApiEndpointsSitesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsSitesDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/sites/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsSitesDelete(requestParameters: ApiEndpointsSitesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsSitesDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsSitesGetByIdRaw(requestParameters: ApiEndpointsSitesGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiEndpointsSitesGetByIdRes>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsSitesGetById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/sites/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsSitesGetById(requestParameters: ApiEndpointsSitesGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiEndpointsSitesGetByIdRes> {
        const response = await this.apiEndpointsSitesGetByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsSitesListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<ApiEndpointsSitesListRes>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/sites`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsSitesList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<ApiEndpointsSitesListRes>> {
        const response = await this.apiEndpointsSitesListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsSitesRenameRaw(requestParameters: ApiEndpointsSitesRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsSitesRename.');
        }

        if (requestParameters.apiEndpointsSitesRenameReq === null || requestParameters.apiEndpointsSitesRenameReq === undefined) {
            throw new runtime.RequiredError('apiEndpointsSitesRenameReq','Required parameter requestParameters.apiEndpointsSitesRenameReq was null or undefined when calling apiEndpointsSitesRename.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/sites/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.apiEndpointsSitesRenameReq,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsSitesRename(requestParameters: ApiEndpointsSitesRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsSitesRenameRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
