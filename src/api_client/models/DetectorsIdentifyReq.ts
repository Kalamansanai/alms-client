/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DetectorsIdentifyReqCalibrationCoordsReq } from './DetectorsIdentifyReqCalibrationCoordsReq';
import {
    DetectorsIdentifyReqCalibrationCoordsReqFromJSON,
    DetectorsIdentifyReqCalibrationCoordsReqFromJSONTyped,
    DetectorsIdentifyReqCalibrationCoordsReqToJSON,
} from './DetectorsIdentifyReqCalibrationCoordsReq';

/**
 * 
 * @export
 * @interface DetectorsIdentifyReq
 */
export interface DetectorsIdentifyReq {
    /**
     * 
     * @type {string}
     * @memberof DetectorsIdentifyReq
     */
    macAddress?: string;
    /**
     * 
     * @type {Array<DetectorsIdentifyReqCalibrationCoordsReq>}
     * @memberof DetectorsIdentifyReq
     */
    coordinates?: Array<DetectorsIdentifyReqCalibrationCoordsReq>;
}

/**
 * Check if a given object implements the DetectorsIdentifyReq interface.
 */
export function instanceOfDetectorsIdentifyReq(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function DetectorsIdentifyReqFromJSON(json: any): DetectorsIdentifyReq {
    return DetectorsIdentifyReqFromJSONTyped(json, false);
}

export function DetectorsIdentifyReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): DetectorsIdentifyReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'macAddress': !exists(json, 'MacAddress') ? undefined : json['MacAddress'],
        'coordinates': !exists(json, 'Coordinates') ? undefined : ((json['Coordinates'] as Array<any>).map(DetectorsIdentifyReqCalibrationCoordsReqFromJSON)),
    };
}

export function DetectorsIdentifyReqToJSON(value?: DetectorsIdentifyReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'MacAddress': value.macAddress,
        'Coordinates': value.coordinates === undefined ? undefined : ((value.coordinates as Array<any>).map(DetectorsIdentifyReqCalibrationCoordsReqToJSON)),
    };
}

