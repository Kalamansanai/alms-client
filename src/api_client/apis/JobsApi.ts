/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  JobsCreateReq,
  JobsCreateRes,
  JobsGetByIdRes,
  JobsListRes,
  JobsRenameReq,
} from '../models';
import {
    JobsCreateReqFromJSON,
    JobsCreateReqToJSON,
    JobsCreateResFromJSON,
    JobsCreateResToJSON,
    JobsGetByIdResFromJSON,
    JobsGetByIdResToJSON,
    JobsListResFromJSON,
    JobsListResToJSON,
    JobsRenameReqFromJSON,
    JobsRenameReqToJSON,
} from '../models';

export interface ApiEndpointsJobsCreateRequest {
    jobsCreateReq: JobsCreateReq;
}

export interface ApiEndpointsJobsDeleteRequest {
    id: number;
}

export interface ApiEndpointsJobsGetByIdRequest {
    id: number;
}

export interface ApiEndpointsJobsRenameRequest {
    id: number;
    jobsRenameReq: JobsRenameReq;
}

/**
 * 
 */
export class JobsApi extends runtime.BaseAPI {

    /**
     */
    async apiEndpointsJobsCreateRaw(requestParameters: ApiEndpointsJobsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsCreateRes>> {
        if (requestParameters.jobsCreateReq === null || requestParameters.jobsCreateReq === undefined) {
            throw new runtime.RequiredError('jobsCreateReq','Required parameter requestParameters.jobsCreateReq was null or undefined when calling apiEndpointsJobsCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/jobs`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: JobsCreateReqToJSON(requestParameters.jobsCreateReq),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JobsCreateResFromJSON(jsonValue));
    }

    /**
     */
    async apiEndpointsJobsCreate(requestParameters: ApiEndpointsJobsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsCreateRes> {
        const response = await this.apiEndpointsJobsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsJobsDeleteRaw(requestParameters: ApiEndpointsJobsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsJobsDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/jobs/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsJobsDelete(requestParameters: ApiEndpointsJobsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsJobsDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsJobsGetByIdRaw(requestParameters: ApiEndpointsJobsGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<JobsGetByIdRes>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsJobsGetById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/jobs/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => JobsGetByIdResFromJSON(jsonValue));
    }

    /**
     */
    async apiEndpointsJobsGetById(requestParameters: ApiEndpointsJobsGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<JobsGetByIdRes> {
        const response = await this.apiEndpointsJobsGetByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsJobsListRaw(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<JobsListRes>>> {
        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/jobs`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(JobsListResFromJSON));
    }

    /**
     */
    async apiEndpointsJobsList(initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<JobsListRes>> {
        const response = await this.apiEndpointsJobsListRaw(initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsJobsRenameRaw(requestParameters: ApiEndpointsJobsRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsJobsRename.');
        }

        if (requestParameters.jobsRenameReq === null || requestParameters.jobsRenameReq === undefined) {
            throw new runtime.RequiredError('jobsRenameReq','Required parameter requestParameters.jobsRenameReq was null or undefined when calling apiEndpointsJobsRename.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/jobs/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: JobsRenameReqToJSON(requestParameters.jobsRenameReq),
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsJobsRename(requestParameters: ApiEndpointsJobsRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsJobsRenameRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
