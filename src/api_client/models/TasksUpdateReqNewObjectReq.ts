/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ObjectCoordinates } from './ObjectCoordinates';
import {
    ObjectCoordinatesFromJSON,
    ObjectCoordinatesFromJSONTyped,
    ObjectCoordinatesToJSON,
} from './ObjectCoordinates';

/**
 * 
 * @export
 * @interface TasksUpdateReqNewObjectReq
 */
export interface TasksUpdateReqNewObjectReq {
    /**
     * 
     * @type {string}
     * @memberof TasksUpdateReqNewObjectReq
     */
    name?: string;
    /**
     * 
     * @type {ObjectCoordinates}
     * @memberof TasksUpdateReqNewObjectReq
     */
    coordinates?: ObjectCoordinates;
}

/**
 * Check if a given object implements the TasksUpdateReqNewObjectReq interface.
 */
export function instanceOfTasksUpdateReqNewObjectReq(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TasksUpdateReqNewObjectReqFromJSON(json: any): TasksUpdateReqNewObjectReq {
    return TasksUpdateReqNewObjectReqFromJSONTyped(json, false);
}

export function TasksUpdateReqNewObjectReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): TasksUpdateReqNewObjectReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'coordinates': !exists(json, 'Coordinates') ? undefined : ObjectCoordinatesFromJSON(json['Coordinates']),
    };
}

export function TasksUpdateReqNewObjectReqToJSON(value?: TasksUpdateReqNewObjectReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Name': value.name,
        'Coordinates': ObjectCoordinatesToJSON(value.coordinates),
    };
}

