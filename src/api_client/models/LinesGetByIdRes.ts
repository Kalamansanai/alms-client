/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LinesGetByIdResResStation } from './LinesGetByIdResResStation';
import {
    LinesGetByIdResResStationFromJSON,
    LinesGetByIdResResStationFromJSONTyped,
    LinesGetByIdResResStationToJSON,
} from './LinesGetByIdResResStation';

/**
 * 
 * @export
 * @interface LinesGetByIdRes
 */
export interface LinesGetByIdRes {
    /**
     * 
     * @type {number}
     * @memberof LinesGetByIdRes
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof LinesGetByIdRes
     */
    name?: string;
    /**
     * 
     * @type {Array<LinesGetByIdResResStation>}
     * @memberof LinesGetByIdRes
     */
    stations?: Array<LinesGetByIdResResStation>;
}

/**
 * Check if a given object implements the LinesGetByIdRes interface.
 */
export function instanceOfLinesGetByIdRes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LinesGetByIdResFromJSON(json: any): LinesGetByIdRes {
    return LinesGetByIdResFromJSONTyped(json, false);
}

export function LinesGetByIdResFromJSONTyped(json: any, ignoreDiscriminator: boolean): LinesGetByIdRes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'stations': !exists(json, 'Stations') ? undefined : ((json['Stations'] as Array<any>).map(LinesGetByIdResResStationFromJSON)),
    };
}

export function LinesGetByIdResToJSON(value?: LinesGetByIdRes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Stations': value.stations === undefined ? undefined : ((value.stations as Array<any>).map(LinesGetByIdResResStationToJSON)),
    };
}

