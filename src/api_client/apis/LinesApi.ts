/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  LinesCreateReq,
  LinesCreateRes,
  LinesGetByIdRes,
  LinesRenameReq,
} from '../models';

export interface ApiEndpointsLinesCreateRequest {
    linesCreateReq: LinesCreateReq;
}

export interface ApiEndpointsLinesDeleteRequest {
    id: number;
}

export interface ApiEndpointsLinesGetByIdRequest {
    id: number;
}

export interface ApiEndpointsLinesRenameRequest {
    id: number;
    linesRenameReq: LinesRenameReq;
}

/**
 * 
 */
export class LinesApi extends runtime.BaseAPI {

    /**
     */
    async apiEndpointsLinesCreateRaw(requestParameters: ApiEndpointsLinesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LinesCreateRes>> {
        if (requestParameters.linesCreateReq === null || requestParameters.linesCreateReq === undefined) {
            throw new runtime.RequiredError('linesCreateReq','Required parameter requestParameters.linesCreateReq was null or undefined when calling apiEndpointsLinesCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/lines`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.linesCreateReq,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsLinesCreate(requestParameters: ApiEndpointsLinesCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LinesCreateRes> {
        const response = await this.apiEndpointsLinesCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLinesDeleteRaw(requestParameters: ApiEndpointsLinesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLinesDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/lines/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsLinesDelete(requestParameters: ApiEndpointsLinesDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsLinesDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLinesGetByIdRaw(requestParameters: ApiEndpointsLinesGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<LinesGetByIdRes>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLinesGetById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/lines/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsLinesGetById(requestParameters: ApiEndpointsLinesGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<LinesGetByIdRes> {
        const response = await this.apiEndpointsLinesGetByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLinesRenameRaw(requestParameters: ApiEndpointsLinesRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLinesRename.');
        }

        if (requestParameters.linesRenameReq === null || requestParameters.linesRenameReq === undefined) {
            throw new runtime.RequiredError('linesRenameReq','Required parameter requestParameters.linesRenameReq was null or undefined when calling apiEndpointsLinesRename.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/lines/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.linesRenameReq,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsLinesRename(requestParameters: ApiEndpointsLinesRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsLinesRenameRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
