/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { JobsGetByIdResResTask } from './JobsGetByIdResResTask';
import {
    JobsGetByIdResResTaskFromJSON,
    JobsGetByIdResResTaskFromJSONTyped,
    JobsGetByIdResResTaskToJSON,
} from './JobsGetByIdResResTask';

/**
 * 
 * @export
 * @interface JobsGetByIdRes
 */
export interface JobsGetByIdRes {
    /**
     * 
     * @type {number}
     * @memberof JobsGetByIdRes
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof JobsGetByIdRes
     */
    name?: string;
    /**
     * 
     * @type {Array<JobsGetByIdResResTask>}
     * @memberof JobsGetByIdRes
     */
    tasks?: Array<JobsGetByIdResResTask>;
}

/**
 * Check if a given object implements the JobsGetByIdRes interface.
 */
export function instanceOfJobsGetByIdRes(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function JobsGetByIdResFromJSON(json: any): JobsGetByIdRes {
    return JobsGetByIdResFromJSONTyped(json, false);
}

export function JobsGetByIdResFromJSONTyped(json: any, ignoreDiscriminator: boolean): JobsGetByIdRes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'Id') ? undefined : json['Id'],
        'name': !exists(json, 'Name') ? undefined : json['Name'],
        'tasks': !exists(json, 'Tasks') ? undefined : ((json['Tasks'] as Array<any>).map(JobsGetByIdResResTaskFromJSON)),
    };
}

export function JobsGetByIdResToJSON(value?: JobsGetByIdRes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'Id': value.id,
        'Name': value.name,
        'Tasks': value.tasks === undefined ? undefined : ((value.tasks as Array<any>).map(JobsGetByIdResResTaskToJSON)),
    };
}

