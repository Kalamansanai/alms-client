/* tslint:disable */
/* eslint-disable */
/**
 * dotnet-nswag
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TasksUpdateReqModObjectReq } from './TasksUpdateReqModObjectReq';
import {
    TasksUpdateReqModObjectReqFromJSON,
    TasksUpdateReqModObjectReqFromJSONTyped,
    TasksUpdateReqModObjectReqToJSON,
} from './TasksUpdateReqModObjectReq';
import type { TasksUpdateReqModStepReq } from './TasksUpdateReqModStepReq';
import {
    TasksUpdateReqModStepReqFromJSON,
    TasksUpdateReqModStepReqFromJSONTyped,
    TasksUpdateReqModStepReqToJSON,
} from './TasksUpdateReqModStepReq';
import type { TasksUpdateReqNewObjectReq } from './TasksUpdateReqNewObjectReq';
import {
    TasksUpdateReqNewObjectReqFromJSON,
    TasksUpdateReqNewObjectReqFromJSONTyped,
    TasksUpdateReqNewObjectReqToJSON,
} from './TasksUpdateReqNewObjectReq';
import type { TasksUpdateReqNewStepReq } from './TasksUpdateReqNewStepReq';
import {
    TasksUpdateReqNewStepReqFromJSON,
    TasksUpdateReqNewStepReqFromJSONTyped,
    TasksUpdateReqNewStepReqToJSON,
} from './TasksUpdateReqNewStepReq';
import type { TasksUpdateReqNewType } from './TasksUpdateReqNewType';
import {
    TasksUpdateReqNewTypeFromJSON,
    TasksUpdateReqNewTypeFromJSONTyped,
    TasksUpdateReqNewTypeToJSON,
} from './TasksUpdateReqNewType';

/**
 * 
 * @export
 * @interface TasksUpdateReq
 */
export interface TasksUpdateReq {
    /**
     * 
     * @type {string}
     * @memberof TasksUpdateReq
     */
    newName?: string | null;
    /**
     * 
     * @type {TasksUpdateReqNewType}
     * @memberof TasksUpdateReq
     */
    newType?: TasksUpdateReqNewType | null;
    /**
     * 
     * @type {number}
     * @memberof TasksUpdateReq
     */
    parentJobId?: number;
    /**
     * 
     * @type {Array<TasksUpdateReqNewObjectReq>}
     * @memberof TasksUpdateReq
     */
    newObjects?: Array<TasksUpdateReqNewObjectReq> | null;
    /**
     * 
     * @type {Array<TasksUpdateReqModObjectReq>}
     * @memberof TasksUpdateReq
     */
    modifiedObjects?: Array<TasksUpdateReqModObjectReq> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof TasksUpdateReq
     */
    deletedObjects?: Array<number> | null;
    /**
     * 
     * @type {Array<TasksUpdateReqNewStepReq>}
     * @memberof TasksUpdateReq
     */
    newSteps?: Array<TasksUpdateReqNewStepReq> | null;
    /**
     * 
     * @type {Array<TasksUpdateReqModStepReq>}
     * @memberof TasksUpdateReq
     */
    modifiedSteps?: Array<TasksUpdateReqModStepReq> | null;
    /**
     * 
     * @type {Array<number>}
     * @memberof TasksUpdateReq
     */
    deletedSteps?: Array<number> | null;
}

/**
 * Check if a given object implements the TasksUpdateReq interface.
 */
export function instanceOfTasksUpdateReq(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function TasksUpdateReqFromJSON(json: any): TasksUpdateReq {
    return TasksUpdateReqFromJSONTyped(json, false);
}

export function TasksUpdateReqFromJSONTyped(json: any, ignoreDiscriminator: boolean): TasksUpdateReq {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'newName': !exists(json, 'NewName') ? undefined : json['NewName'],
        'newType': !exists(json, 'NewType') ? undefined : TasksUpdateReqNewTypeFromJSON(json['NewType']),
        'parentJobId': !exists(json, 'ParentJobId') ? undefined : json['ParentJobId'],
        'newObjects': !exists(json, 'NewObjects') ? undefined : (json['NewObjects'] === null ? null : (json['NewObjects'] as Array<any>).map(TasksUpdateReqNewObjectReqFromJSON)),
        'modifiedObjects': !exists(json, 'ModifiedObjects') ? undefined : (json['ModifiedObjects'] === null ? null : (json['ModifiedObjects'] as Array<any>).map(TasksUpdateReqModObjectReqFromJSON)),
        'deletedObjects': !exists(json, 'DeletedObjects') ? undefined : json['DeletedObjects'],
        'newSteps': !exists(json, 'NewSteps') ? undefined : (json['NewSteps'] === null ? null : (json['NewSteps'] as Array<any>).map(TasksUpdateReqNewStepReqFromJSON)),
        'modifiedSteps': !exists(json, 'ModifiedSteps') ? undefined : (json['ModifiedSteps'] === null ? null : (json['ModifiedSteps'] as Array<any>).map(TasksUpdateReqModStepReqFromJSON)),
        'deletedSteps': !exists(json, 'DeletedSteps') ? undefined : json['DeletedSteps'],
    };
}

export function TasksUpdateReqToJSON(value?: TasksUpdateReq | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'NewName': value.newName,
        'NewType': TasksUpdateReqNewTypeToJSON(value.newType),
        'ParentJobId': value.parentJobId,
        'NewObjects': value.newObjects === undefined ? undefined : (value.newObjects === null ? null : (value.newObjects as Array<any>).map(TasksUpdateReqNewObjectReqToJSON)),
        'ModifiedObjects': value.modifiedObjects === undefined ? undefined : (value.modifiedObjects === null ? null : (value.modifiedObjects as Array<any>).map(TasksUpdateReqModObjectReqToJSON)),
        'DeletedObjects': value.deletedObjects,
        'NewSteps': value.newSteps === undefined ? undefined : (value.newSteps === null ? null : (value.newSteps as Array<any>).map(TasksUpdateReqNewStepReqToJSON)),
        'ModifiedSteps': value.modifiedSteps === undefined ? undefined : (value.modifiedSteps === null ? null : (value.modifiedSteps as Array<any>).map(TasksUpdateReqModStepReqToJSON)),
        'DeletedSteps': value.deletedSteps,
    };
}

