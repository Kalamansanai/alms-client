/* tslint:disable */
/* eslint-disable */
/**
 * Api
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  ApiEndpointsLocationsCreateReq,
  ApiEndpointsLocationsCreateRes,
  ApiEndpointsLocationsGetByIdRes,
  ApiEndpointsLocationsRenameReq,
} from '../models';

export interface ApiEndpointsLocationsCreateRequest {
    apiEndpointsLocationsCreateReq: ApiEndpointsLocationsCreateReq;
}

export interface ApiEndpointsLocationsDeleteRequest {
    id: number;
}

export interface ApiEndpointsLocationsGetByIdRequest {
    id: number;
}

export interface ApiEndpointsLocationsRenameRequest {
    id: number;
    apiEndpointsLocationsRenameReq: ApiEndpointsLocationsRenameReq;
}

/**
 * 
 */
export class LocationsApi extends runtime.BaseAPI {

    /**
     */
    async apiEndpointsLocationsCreateRaw(requestParameters: ApiEndpointsLocationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiEndpointsLocationsCreateRes>> {
        if (requestParameters.apiEndpointsLocationsCreateReq === null || requestParameters.apiEndpointsLocationsCreateReq === undefined) {
            throw new runtime.RequiredError('apiEndpointsLocationsCreateReq','Required parameter requestParameters.apiEndpointsLocationsCreateReq was null or undefined when calling apiEndpointsLocationsCreate.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/locations`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.apiEndpointsLocationsCreateReq,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsLocationsCreate(requestParameters: ApiEndpointsLocationsCreateRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiEndpointsLocationsCreateRes> {
        const response = await this.apiEndpointsLocationsCreateRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLocationsDeleteRaw(requestParameters: ApiEndpointsLocationsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLocationsDelete.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/locations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsLocationsDelete(requestParameters: ApiEndpointsLocationsDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsLocationsDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLocationsGetByIdRaw(requestParameters: ApiEndpointsLocationsGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<ApiEndpointsLocationsGetByIdRes>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLocationsGetById.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/v1/locations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response);
    }

    /**
     */
    async apiEndpointsLocationsGetById(requestParameters: ApiEndpointsLocationsGetByIdRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ApiEndpointsLocationsGetByIdRes> {
        const response = await this.apiEndpointsLocationsGetByIdRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async apiEndpointsLocationsRenameRaw(requestParameters: ApiEndpointsLocationsRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<object>> {
        if (requestParameters.id === null || requestParameters.id === undefined) {
            throw new runtime.RequiredError('id','Required parameter requestParameters.id was null or undefined when calling apiEndpointsLocationsRename.');
        }

        if (requestParameters.apiEndpointsLocationsRenameReq === null || requestParameters.apiEndpointsLocationsRenameReq === undefined) {
            throw new runtime.RequiredError('apiEndpointsLocationsRenameReq','Required parameter requestParameters.apiEndpointsLocationsRenameReq was null or undefined when calling apiEndpointsLocationsRename.');
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/v1/locations/{id}`.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters.id))),
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: requestParameters.apiEndpointsLocationsRenameReq,
        }, initOverrides);

        return new runtime.JSONApiResponse<any>(response);
    }

    /**
     */
    async apiEndpointsLocationsRename(requestParameters: ApiEndpointsLocationsRenameRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<object> {
        const response = await this.apiEndpointsLocationsRenameRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
